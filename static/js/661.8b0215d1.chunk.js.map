{"version":3,"file":"static/js/661.8b0215d1.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem.module.css?16c0","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__form\":\"ContactForm_phonebook__form__XB6ku\",\"phonebook__label\":\"ContactForm_phonebook__label__PN-+-\",\"icon\":\"ContactForm_icon__wGMYw\",\"phonebook__input\":\"ContactForm_phonebook__input__efLHZ\",\"phonebook__button\":\"ContactForm_phonebook__button__639X2\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/API';\nimport { selectContacts } from 'redux/selectors';\nimport { BsPersonCircle, BsFillTelephoneFill } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport style from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { items } = useSelector(selectContacts);\n  const contactsNames = items.map(contact => contact.name);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    if (contactsNames.includes(name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    } else {\n      dispatch(addContact(newContact));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.phonebook__form} onSubmit={handleFormSubmit}>\n      <label htmlFor=\"nameInputId\" className={style.phonebook__label}>\n        <BsPersonCircle className={style.icon} /> Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        id=\"nameInputId\"\n        required\n        onChange={handleInputChange}\n        className={style.phonebook__input}\n        value={name}\n      />\n      <label htmlFor=\"telInputId\" className={style.phonebook__label}>\n        <BsFillTelephoneFill className={style.icon} /> Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        id=\"telInputId\"\n        required\n        onChange={handleInputChange}\n        className={style.phonebook__input}\n        value={number}\n      />\n      <button type=\"submit\" className={style.phonebook__button}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport style from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(filterContacts(event.currentTarget.value));\n  };\n\n  return (\n    <label>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        className={style.filterInput}\n        placeholder=\"Filter by name\"\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__list\":\"ContactList_contacts__list__hSN0M\",\"error\":\"ContactList_error__uCB2f\",\"error_icon\":\"ContactList_error_icon__Dx7D1\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__listItem\":\"ContactListItem_contacts__listItem__LyXHe\",\"contacts__delBtn\":\"ContactListItem_contacts__delBtn__+cklu\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/API';\nimport PropTypes from 'prop-types';\nimport style from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={style.contacts__listItem}>\n      <span>\n        {name}: {number}\n      </span>\n      <button\n        type=\"button\"\n        className={style.contacts__delBtn}\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/API';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { MdOutlineError } from 'react-icons/md';\n\nimport style from './ContactList.module.css';\n\nimport { ContactListItem } from './ContactListItem';\n\nexport const ContactList = () => {\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={style.contacts__list}>\n      {isLoading && <Loader />}\n      {error && (\n        <div className={style.error}>\n          <MdOutlineError className={style.error_icon} /> {error}\n        </div>\n      )}\n      {filteredContacts.length > 0 &&\n        filteredContacts.map(contact => (\n          <ContactListItem contact={contact} key={contact.id} />\n        ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Contacts_phonebook__G9bQK\",\"title\":\"Contacts_title__LxdN4\",\"contactList\":\"Contacts_contactList__twCQx\"};","import { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { Filter } from \"../../components/Filter/Filter\";\nimport { ContactList } from \"../../components/ContactList/ContactList\";\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n\n    return (\n        <section className={css.phonebook}>\n            <ContactForm />\n            <div className={css.contactList}>\n                <h2 className={css.title}>Your Contacts</h2>\n                <Filter />\n                <ContactList />\n            </div>\n        </section>\n    )\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","contactsNames","useSelector","items","map","contact","dispatch","useDispatch","handleInputChange","event","currentTarget","value","reset","className","style","onSubmit","preventDefault","newContact","includes","toast","addContact","htmlFor","type","pattern","title","id","required","onChange","Filter","filterContacts","placeholder","ContactListItem","onClick","deleteContact","onDeleteContact","ContactList","isLoading","error","normalizedFilter","toLowerCase","filteredContacts","useEffect","fetchContacts","Loader","length","css"],"sourceRoot":""}